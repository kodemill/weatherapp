{"version":3,"sources":["../../src/controller/notification.js"],"names":[],"mappings":";;;;;;AAAA;;AACA;;;;AAGA,MAAM;AAAA,+BAAkB,WAAO,iBAAP,EAA0B,OAA1B,EAAsC;AAC5D,QAAI,CAAC,iBAAD,IAAsB,kBAAkB,MAAlB,KAA6B,CAAvD,EAA0D;AACxD;AACD;AACD,UAAM,WAAW,MAAM,uBAAgB,QAAhB,CAAyB,iBAAzB,EAA4C,WAA5C,CAAvB;AACA,UAAM,sBAAsB,SAAS,MAAT,CAAgB;AAAA,aAAa,UAAU,IAAV,CAAe,qBAAf,EAAb;AAAA,KAAhB,EACzB,GADyB,CACrB;AAAA,aACH,CAAC,SAAD,EAAY,QAAQ,IAAR,CAAa;AAAA,eAAU,UAAU,IAAV,CAAe,EAAf,KAAsB,OAAO,IAAP,CAAY,QAAZ,EAAhC;AAAA,OAAb,CAAZ,CADG;AAAA,KADqB,CAA5B;AAGA,UAAM,QAAQ,GAAR,CAAY,oBACf,GADe,CACX;AAAA,aAAQ,sCAAsB,KAAK,CAAL,CAAtB,EAA+B,KAAK,CAAL,CAA/B,CAAR;AAAA,KADW,CAAZ,CAAN;AAED,GAVK;;AAAA;AAAA;AAAA;AAAA,IAAN;;kBAae,EAAE,eAAF,E","file":"notification.js","sourcesContent":["import { WeatherCriteria } from '../model';\r\nimport { sendNotificationEmail } from '../lib/send-email';\r\n\r\n\r\nconst notificateUsers = async (fulfilledCriteria, reports) => {\r\n  if (!fulfilledCriteria || fulfilledCriteria.length === 0) {\r\n    return;\r\n  }\r\n  const criteria = await WeatherCriteria.populate(fulfilledCriteria, 'city user');\r\n  const criteriaReportPairs = criteria.filter(criterion => criterion.user.getNotificationEmails())\r\n    .map(criterion =>\r\n      [criterion, reports.find(report => criterion.city.id === report.city.toString())]);\r\n  await Promise.all(criteriaReportPairs\r\n    .map(pair => sendNotificationEmail(pair[0], pair[1])));\r\n};\r\n\r\n\r\nexport default { notificateUsers };\r\n"]}