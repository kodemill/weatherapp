{"version":3,"sources":["../../src/controller/user.js"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,MAAM;AAAA,+BAAgB,WAAO,IAAP,EAAa,IAAb,EAAsB;AAC1C;AACA,UAAM,WAAW,MAAM,uBAAgB,IAAhB,CAAqB,EAAE,MAAM,IAAR,EAArB,CAAvB;AACA,UAAM,QAAQ,GAAR,CAAY,SAAS,GAAT,CAAa,qBAAa;AAC1C,gBAAU,IAAV,GAAiB,IAAjB;AACA,aAAO,UAAU,IAAV,EAAP;AACD,KAHiB,CAAZ,CAAN;AAIA;AACA,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,MAAL,CAAY,OAAZ,CAAoB;AAAA,eAAS,KAAK,QAAL,CAAc,KAAd,CAAT;AAAA,OAApB;AACD;AACD;AACA,QAAI,KAAK,OAAL,IAAgB,KAAK,OAAzB,EAAkC;AAChC,WAAK,YAAL,CAAkB,KAAK,OAAvB;AACD;AACD,WAAO,MAAM,KAAK,MAAL,EAAb;AACD,GAhBK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAkBA;AACA,MAAM;AAAA,gCAAkB,WAAO,IAAP,EAAa,OAAb,EAAyB;AAC/C;AACA,QAAI,QAAQ,MAAZ,EAAoB;AAClB,YAAM,WAAW,iBAAE,YAAF,CAAe,KAAK,MAApB,EAA4B,QAAQ,MAApC,EAA4C,SAA5C,CAAjB;AACA,YAAM,QAAQ,iBAAE,YAAF,CAAe,QAAQ,MAAvB,EAA+B,KAAK,MAApC,EAA4C,SAA5C,CAAd;AACA,YAAM,qBAAqB,iBAAE,YAAF,CAAe,QAAQ,MAAvB,EAA+B,KAA/B,EAAsC,SAAtC,CAA3B;AACA;AACA,eAAS,OAAT,CAAiB;AAAA,eAAS,MAAM,MAAN,EAAT;AAAA,OAAjB;AACA;AACA,YAAM,OAAN,CAAc;AAAA,eAAS,KAAK,QAAL,CAAc,KAAd,CAAT;AAAA,OAAd;AACA,YAAM,QAAQ,GAAR,CAAY,MAAM,GAAN,CAAU;AAAA,eAAS,sCAAsB,IAAtB,EAA4B,KAA5B,CAAT;AAAA,OAAV,CAAZ,CAAN;AACA;AACA,yBAAmB,OAAnB,CAA2B,iBAAS;AAClC,aAAK,SAAL,CAAe,KAAf,EAAsB,gBAAtB,GAAyC,MAAM,gBAA/C;AACD,OAFD;AAGD;AACD,QAAI,QAAQ,IAAZ,EAAkB;AAChB,WAAK,IAAL,GAAY,QAAQ,IAApB;AACD;AACD,QAAI,QAAQ,OAAZ,EAAqB;AACnB,WAAK,OAAL,GAAe,QAAQ,OAAvB;AACD;AACD,WAAO,MAAM,KAAK,IAAL,EAAb;AACD,GAvBK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAyBA,MAAM;AAAA,gCAA4B,WAAO,IAAP,EAAa,OAAb,EAAyB;AACzD,UAAM,aAAa,KAAK,MAAL,CAAY,IAAZ,CAAiB;AAAA,aAAS,MAAM,OAAN,KAAkB,OAA3B;AAAA,KAAjB,CAAnB;AACA,QAAI,UAAJ,EAAgB;AACd,iBAAW,OAAX,GAAqB,IAArB;AACA,YAAM,KAAK,IAAL,EAAN;AACD;AACF,GANK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAQA,MAAM;AAAA,gCAAiC,WAAO,IAAP,EAAa,OAAb,EAAyB;AAC9D,UAAM,aAAa,KAAK,MAAL,CAAY,IAAZ,CAAiB;AAAA,aAAS,MAAM,OAAN,KAAkB,OAA3B;AAAA,KAAjB,CAAnB;AACA,QAAI,UAAJ,EAAgB;AACd,iBAAW,gBAAX,GAA8B,KAA9B;AACA,YAAM,KAAK,IAAL,EAAN;AACD;AACF,GANK;;AAAA;AAAA;AAAA;AAAA,IAAN;;QAQS,a,GAAA,a;QAAe,e,GAAA,e;QACtB,yB,GAAA,yB;QAA2B,8B,GAAA,8B","file":"user.js","sourcesContent":["import { WeatherCriteria } from '../model';\nimport _ from 'lodash';\nimport { sendVerificationEmail } from '../lib/send-email';\n\nconst mergeAccounts = async (into, from) => {\n  // merge criteria\n  const criteria = await WeatherCriteria.find({ user: from });\n  await Promise.all(criteria.map(criterion => {\n    criterion.user = into;\n    return criterion.save();\n  }));\n  // merge emails\n  if (from.emails) {\n    from.emails.forEach(email => into.addEmail(email));\n  }\n  // merge options\n  if (into.options && from.options) {\n    into.mergeOptions(from.options);\n  }\n  return await from.remove();\n};\n\n// trust everything except 'trustedness' of emails\nconst saveUserForUser = async (user, changes) => {\n  // emails, options, name\n  if (changes.emails) {\n    const toRemove = _.differenceBy(user.emails, changes.emails, 'address');\n    const toAdd = _.differenceBy(changes.emails, user.emails, 'address');\n    const notificationChange = _.differenceBy(changes.emails, toAdd, 'address');\n    // remove\n    toRemove.forEach(email => email.remove());\n    // add new\n    toAdd.forEach(email => user.addEmail(email));\n    await Promise.all(toAdd.map(email => sendVerificationEmail(user, email)));\n    // notification changes\n    notificationChange.forEach(email => {\n      user.findEmail(email).sendNotification = email.sendNotification;\n    });\n  }\n  if (changes.name) {\n    user.name = changes.name;\n  }\n  if (changes.options) {\n    user.options = changes.options;\n  }\n  return await user.save();\n};\n\nconst verifyEmailForUserViaMail = async (user, address) => {\n  const foundEmail = user.emails.find(email => email.address === address);\n  if (foundEmail) {\n    foundEmail.trusted = true;\n    await user.save();\n  }\n};\n\nconst unsubscribeEmailForUserViaMail = async (user, address) => {\n  const foundEmail = user.emails.find(email => email.address === address);\n  if (foundEmail) {\n    foundEmail.sendNotification = false;\n    await user.save();\n  }\n};\n\nexport { mergeAccounts, saveUserForUser,\n  verifyEmailForUserViaMail, unsubscribeEmailForUserViaMail };\n"]}