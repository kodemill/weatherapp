{"version":3,"sources":["../../src/lib/periodic-job.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEA,MAAM;AAAA,+BAAM,aAAY;AACtB,YAAQ,GAAR,CAAY,uBAAZ;AACA,UAAM,QAAQ,KAAK,GAAL,EAAd;AACA,QAAI;AACF,YAAM,+BAA+B,MAAM,kBAAkB,8BAAlB,EAA3C;AACA,YAAM,uBAAuB,eAAvB,CAAuC,GAAG,4BAA1C,CAAN;AACD,KAHD,CAGE,OAAO,KAAP,EAAc;AACd,cAAQ,GAAR,CAAY,KAAZ;AACD,KALD,SAKU;AACR,cAAQ,GAAR,CAAa,6BAA2B,KAAK,GAAL,KAAa,KAAM,KAA3D;AACD;AACF,GAXK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAaA,IAAI,UAAJ;;AAEA,MAAM,OAAO,MAAM;AACjB,gBAAc,UAAd;AACA,eAAa,IAAb;AACD,CAHD;;AAKA,MAAM,QAAQ,CAAC,SAAD,EAAY,WAAZ,KAA4B;AACxC,MAAI,UAAJ,EAAgB;AACd;AACD;AACD,MAAI,SAAJ,EAAe;AACb;AACD;AACD,eAAa,YAAY,GAAZ,EAAiB,eAAe,iBAAO,IAAP,CAAY,cAA5C,CAAb;AACD,CARD;;kBAUe;AACb,OADa;AAEb;AAFa,C","file":"periodic-job.js","sourcesContent":["import WeatherController from '../controller/weather';\nimport NotificationController from '../controller/notification';\nimport config from '../../config';\n\nconst job = async () => {\n  console.log('periodic job start...');\n  const start = Date.now();\n  try {\n    const fulfilledCriteriaWithReports = await WeatherController.fetchWeatherAndUpdateDocuments();\n    await NotificationController.notificateUsers(...fulfilledCriteriaWithReports);\n  } catch (error) {\n    console.log(error);\n  } finally {\n    console.log(`periodic job finished in ${Date.now() - start}ms`);\n  }\n};\n\nlet intervalId;\n\nconst stop = () => {\n  clearInterval(intervalId);\n  intervalId = null;\n};\n\nconst start = (immediate, granularity) => {\n  if (intervalId) {\n    stop();\n  }\n  if (immediate) {\n    job();\n  }\n  intervalId = setInterval(job, granularity || config.time.jobGranularity);\n};\n\nexport default {\n  start,\n  stop,\n};\n"]}