{"version":3,"sources":["../../src/lib/periodic-job.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEA,MAAM;AAAA,+BAAM,aAAY;AACtB,YAAQ,GAAR,CAAY,uBAAZ;AACA,UAAM,QAAQ,KAAK,GAAL,EAAd;AACA,QAAI;AACF,YAAM,+BAA+B,MAAM,kBAAkB,8BAAlB,EAA3C;AACA,YAAM,uBAAuB,eAAvB,CAAuC,GAAG,4BAA1C,CAAN;AACD,KAHD,CAGE,OAAO,KAAP,EAAc;AACd,cAAQ,GAAR,CAAY,KAAZ;AACD,KALD,SAKU;AACR,cAAQ,GAAR,CAAa,6BAA2B,KAAK,GAAL,KAAa,KAAM,KAA3D;AACD;AACF,GAXK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAaA,IAAI,UAAJ;;AAEA,MAAM,OAAO,MAAM;AACjB,gBAAc,UAAd;AACA,eAAa,IAAb;AACD,CAHD;;AAKA,MAAM,QAAQ,CAAC,SAAD,EAAY,WAAZ,KAA4B;AACxC,MAAI,UAAJ,EAAgB;AACd;AACD;AACD,MAAI,SAAJ,EAAe;AACb;AACD;AACD,eAAa,YAAY,GAAZ,EAAiB,eAAe,iBAAO,IAAP,CAAY,cAA5C,CAAb;AACD,CARD;;kBAUe;AACb,OADa;AAEb;AAFa,C","file":"periodic-job.js","sourcesContent":["import WeatherController from '../controller/weather';\r\nimport NotificationController from '../controller/notification';\r\nimport config from '../../config';\r\n\r\nconst job = async () => {\r\n  console.log('periodic job start...');\r\n  const start = Date.now();\r\n  try {\r\n    const fulfilledCriteriaWithReports = await WeatherController.fetchWeatherAndUpdateDocuments();\r\n    await NotificationController.notificateUsers(...fulfilledCriteriaWithReports);\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    console.log(`periodic job finished in ${Date.now() - start}ms`);\r\n  }\r\n};\r\n\r\nlet intervalId;\r\n\r\nconst stop = () => {\r\n  clearInterval(intervalId);\r\n  intervalId = null;\r\n};\r\n\r\nconst start = (immediate, granularity) => {\r\n  if (intervalId) {\r\n    stop();\r\n  }\r\n  if (immediate) {\r\n    job();\r\n  }\r\n  intervalId = setInterval(job, granularity || config.time.jobGranularity);\r\n};\r\n\r\nexport default {\r\n  start,\r\n  stop,\r\n};\r\n"]}