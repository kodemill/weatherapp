{"version":3,"sources":["../../src/model/user.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAM,aAAa,IAAI,mBAAS,MAAb,CAAoB;AACrC,QAAM,MAD+B;AAErC,UAAQ,CAAC;AACP,aAAS,MADF;AAEP,aAAS,OAFF;AAGP,sBAAkB;AAHX,GAAD,CAF6B;AAOrC,MAAI,MAPiC;AAQrC,WAAS;AACP,wBAAoB,OADb;AAEP,yBAAqB,OAFd;AAGP,wBAAoB;AAClB,YAAM,OADY;AAElB,eAAS;AAFS;AAHb,GAR4B;AAgBrC,SAAO;AACL,UAAM,MADD;AAEL,YAAQ,IAFH;AAGL,YAAQ;AAHH,GAhB8B;AAqBrC,cAAY;AACV,UAAM,MADI;AAEV,YAAQ,IAFE;AAGV,YAAQ;AAHE,GArByB;AA0BrC,YAAU;AACR,UAAM,MADE;AAER,YAAQ,IAFA;AAGR,YAAQ;AAHA;AA1B2B,CAApB,CAAnB;;AAiCA,WAAW,OAAX,CAAmB,YAAnB,GAAkC,UAAU,OAAV,EAAmB;AACnD,OAAK,OAAL,GAAe,KAAK,OAAL,IAAgB,EAA/B;AACA,OAAK,OAAL,CAAa,kBAAb,GACE,KAAK,OAAL,CAAa,kBAAb,IAAmC,QAAQ,kBAD7C;AAEA,OAAK,OAAL,CAAa,mBAAb,GACE,KAAK,OAAL,CAAa,mBAAb,IAAoC,QAAQ,mBAD9C;AAEA,OAAK,OAAL,CAAa,kBAAb,GACE,KAAK,OAAL,CAAa,kBAAb,IAAmC,QAAQ,kBAD7C;AAED,CARD;;AAUA,WAAW,OAAX,CAAmB,SAAnB,GAA+B,UAAU,KAAV,EAAiB;AAC9C,MAAI,UAAU,KAAd;AACA,MAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,cAAU,MAAM,OAAhB;AACD;AACD,SAAO,KAAK,MAAL,CAAY,IAAZ,CAAiB,iBAAiB,cAAc,OAAd,KAA0B,OAA5D,CAAP;AACD,CAND;;AAQA,WAAW,OAAX,CAAmB,QAAnB,GAA8B,UAAU,OAAV,EAAmB,OAAnB,EAA4B,gBAA5B,EAA8C;AAC1E,MAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC/B;AACA,cAAU,QAAQ,OAAlB;AACA,uBAAmB,QAAQ,gBAA3B;AACA,cAAU,QAAQ,OAAlB;AACA;AACD;AACD,MAAI,KAAK,MAAT,EAAiB;AACf,UAAM,kBAAkB,KAAK,MAAL,CAAY,IAAZ,CAAiB,SAAS,MAAM,OAAN,KAAkB,OAA5C,CAAxB;AACA,QAAI,eAAJ,EAAqB;AACnB,sBAAgB,OAAhB,GAA0B,gBAAgB,OAAhB,IAA2B,OAArD;AACA,sBAAgB,gBAAhB,GAAmC,gBAAgB,gBAAhB,IAAoC,gBAAvE;AACA;AACD;AACF,GAPD,MAOO;AACL,SAAK,MAAL,GAAc,EAAd;AACD;AACD,OAAK,MAAL,CAAY,IAAZ,CAAiB,EAAE,OAAF,EAAW,OAAX,EAAoB,gBAApB,EAAjB;AACD,CAnBD;;AAqBA,WAAW,OAAX,CAAmB,qBAAnB,GAA2C,YAAY;AACrD,MAAI,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,kBAA7B,IAAmD,KAAK,MAA5D,EAAoE;AAClE,WAAO,KAAK,MAAL,CAAY,MAAZ,CAAmB,SAAS,MAAM,OAAN,IAAiB,MAAM,gBAAnD,CAAP;AACD;AACD,SAAO,EAAP;AACD,CALD;;AAOA,WAAW,GAAX,CAAe,QAAf,EAAyB;AACvB,aAAW,CAAC,GAAD,EAAM,GAAN,KAAc;AACvB,WAAO,IAAI,GAAX;AACA,WAAO,IAAI,GAAX;AACA,WAAO,IAAI,EAAX;AACA,WAAO,IAAI,KAAX;AACD;AANsB,CAAzB;;kBASe,mBAAS,KAAT,CAAe,MAAf,EAAuB,UAAvB,C","file":"user.js","sourcesContent":["import mongoose from 'mongoose';\n\nconst UserSchema = new mongoose.Schema({\n  name: String,\n  emails: [{\n    address: String,\n    trusted: Boolean,\n    sendNotification: Boolean,\n  }],\n  ip: String,\n  options: {\n    notificateViaEmail: Boolean,\n    notificateViaNative: Boolean,\n    notificateViaPopup: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  token: {\n    type: String,\n    unique: true,\n    sparse: true,\n  },\n  facebookId: {\n    type: String,\n    unique: true,\n    sparse: true,\n  },\n  githubId: {\n    type: String,\n    unique: true,\n    sparse: true,\n  },\n});\n\nUserSchema.methods.mergeOptions = function (options) {\n  this.options = this.options || {};\n  this.options.notificateViaEmail =\n    this.options.notificateViaEmail || options.notificateViaEmail;\n  this.options.notificateViaNative =\n    this.options.notificateViaNative || options.notificateViaNative;\n  this.options.notificateViaPopup =\n    this.options.notificateViaPopup || options.notificateViaPopup;\n};\n\nUserSchema.methods.findEmail = function (email) {\n  let address = email;\n  if (typeof email === 'object') {\n    address = email.address;\n  }\n  return this.emails.find(existingEmail => existingEmail.address === address);\n};\n\nUserSchema.methods.addEmail = function (address, trusted, sendNotification) {\n  if (typeof address === 'object') {\n    /* eslint-disable */\n    trusted = address.trusted;\n    sendNotification = address.sendNotification;\n    address = address.address;\n    /* eslint-enable */\n  }\n  if (this.emails) {\n    const existingAddress = this.emails.find(email => email.address === address);\n    if (existingAddress) {\n      existingAddress.trusted = existingAddress.trusted || trusted;\n      existingAddress.sendNotification = existingAddress.sendNotification || sendNotification;\n      return;\n    }\n  } else {\n    this.emails = [];\n  }\n  this.emails.push({ address, trusted, sendNotification });\n};\n\nUserSchema.methods.getNotificationEmails = function () {\n  if (this.options && this.options.notificateViaEmail && this.emails) {\n    return this.emails.filter(email => email.trusted && email.sendNotification);\n  }\n  return [];\n};\n\nUserSchema.set('toJSON', {\n  transform: (doc, ret) => {\n    delete ret._id;\n    delete ret.__v;\n    delete ret.ip;\n    delete ret.token;\n  },\n});\n\nexport default mongoose.model('User', UserSchema);\n"]}