{"version":3,"sources":["../../src/model/latest-weather-report.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAM,4BAA4B,qBAAW;AAC3C,QAAM;AACJ,UAAM,MADF;AAEJ,SAAK,MAFD;AAGJ,cAAU,IAHN;AAIJ,WAAO,IAJH;AAKJ,YAAQ;AALJ,GADqC;AAQ3C,iBAAe;AACb,UAAM,iBAAO,KAAP,CAAa,QADN;AAEb,SAAK,eAFQ;AAGb,cAAU;AAHG,GAR4B;AAa3C,aAAW;AACT,UAAM,IADG;AAET,cAAU,IAFD;AAGT,aAAS,KAAK;AAHL;AAbgC,CAAX,CAAlC;;AAoBA,0BAA0B,GAA1B,CAA8B,MAA9B,EAAsC,UAAU,IAAV,EAAgB;AACpD,MAAI,KAAK,UAAL,CAAgB,qBAAhB,CAAJ,EAA4C;AAC1C,SAAK,SAAL,GAAiB,KAAK,GAAL,EAAjB;AACD;AACD;AACD,CALD;;kBAOe,mBAAS,KAAT,CAAe,qBAAf,EAAsC,yBAAtC,C","file":"latest-weather-report.js","sourcesContent":["import mongoose, { Schema } from 'mongoose';\r\n\r\nconst LatestWeatherReportSchema = new Schema({\r\n  city: {\r\n    type: Number,\r\n    ref: 'City',\r\n    required: true,\r\n    index: true,\r\n    unique: true,\r\n  },\r\n  weatherReport: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'WeatherReport',\r\n    required: true,\r\n  },\r\n  updatedAt: {\r\n    type: Date,\r\n    required: true,\r\n    default: Date.now,\r\n  },\r\n});\r\n\r\nLatestWeatherReportSchema.pre('save', function (next) {\r\n  if (this.isModified('latestWeatherReport')) {\r\n    this.updatedAt = Date.now();\r\n  }\r\n  next();\r\n});\r\n\r\nexport default mongoose.model('LatestWeatherReport', LatestWeatherReportSchema);\r\n"]}