{"version":3,"sources":["../../src/model/latest-weather-report.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAM,4BAA4B,qBAAW;AAC3C,QAAM;AACJ,UAAM,MADF;AAEJ,SAAK,MAFD;AAGJ,cAAU,IAHN;AAIJ,WAAO,IAJH;AAKJ,YAAQ;AALJ,GADqC;AAQ3C,iBAAe;AACb,UAAM,iBAAO,KAAP,CAAa,QADN;AAEb,SAAK,eAFQ;AAGb,cAAU;AAHG,GAR4B;AAa3C,aAAW;AACT,UAAM,IADG;AAET,cAAU,IAFD;AAGT,aAAS,KAAK;AAHL;AAbgC,CAAX,CAAlC;;AAoBA,0BAA0B,GAA1B,CAA8B,MAA9B,EAAsC,UAAU,IAAV,EAAgB;AACpD,MAAI,KAAK,UAAL,CAAgB,qBAAhB,CAAJ,EAA4C;AAC1C,SAAK,SAAL,GAAiB,KAAK,GAAL,EAAjB;AACD;AACD;AACD,CALD;;kBAOe,mBAAS,KAAT,CAAe,qBAAf,EAAsC,yBAAtC,C","file":"latest-weather-report.js","sourcesContent":["import mongoose, { Schema } from 'mongoose';\n\nconst LatestWeatherReportSchema = new Schema({\n  city: {\n    type: Number,\n    ref: 'City',\n    required: true,\n    index: true,\n    unique: true,\n  },\n  weatherReport: {\n    type: Schema.Types.ObjectId,\n    ref: 'WeatherReport',\n    required: true,\n  },\n  updatedAt: {\n    type: Date,\n    required: true,\n    default: Date.now,\n  },\n});\n\nLatestWeatherReportSchema.pre('save', function (next) {\n  if (this.isModified('latestWeatherReport')) {\n    this.updatedAt = Date.now();\n  }\n  next();\n});\n\nexport default mongoose.model('LatestWeatherReport', LatestWeatherReportSchema);\n"]}